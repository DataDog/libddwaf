FROM alpine:3.12 AS cross
RUN apk update && apk add build-base abuild git sudo
RUN git clone https://gitlab.alpinelinux.org/alpine/aports.git --branch 3.12-stable --depth 1
COPY docker/libddwaf/aarch64-linux-musl/binutils.patch docker/libddwaf/aarch64-linux-musl/gcc.patch /across/
RUN cd /aports && patch -p1 < /across/binutils.patch && patch -p1 < /across/gcc.patch
COPY docker/libddwaf/aarch64-linux-musl/setup-cross-cc.sh /across/
WORKDIR /across
RUN sh setup-cross-cc.sh aarch64
RUN apk --root /root/sysroot-aarch64 add --arch aarch64 libstdc++

FROM alpine:3.12 AS toolchain
RUN true 1 && apk add build-base git cmake
COPY --from=cross /root/.abuild /root/.abuild
COPY --from=cross /across/packages /across/packages
RUN apk --repository /across/packages/main --keys-dir ~/.abuild add build-base-aarch64
COPY --from=cross /root/sysroot-aarch64/lib /usr/aarch64-alpine-linux-musl/lib
COPY --from=cross /root/sysroot-aarch64/usr/lib /usr/aarch64-alpine-linux-musl/lib
COPY --from=cross /root/sysroot-aarch64/usr/include /usr/aarch64-alpine-linux-musl/include

FROM toolchain AS build
RUN mkdir /build
WORKDIR /build
COPY . /build/
RUN cmake -E make_directory build packages && \
    cd build && \
    cmake -DCMAKE_TOOLCHAIN_FILE="../docker/libddwaf/aarch64-linux-musl/Toolchain.cmake" -DCMAKE_BUILD_TYPE=RelWithDebInfo .. && \
    cmake --build . --config RelWithDebInfo --verbose --target libddwaf_shared --target libddwaf_static -j

FROM scratch
COPY --from=build /build/include/ddwaf.h /build/include/
COPY --from=build /build/build/libddwaf.so /build/build/libddwaf.so.debug /build/build/libddwaf.a /build/lib/
COPY --from=build /build/build/CMakeFiles/Export/share/ /build/share/
CMD /bin/false
