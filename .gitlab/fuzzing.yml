variables:
  # Use the same base image as benchmarks as we know it should be able to build the fuzzers
  BASE_CI_IMAGE: 486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/benchmarking-platform:libddwaf

run-fuzzing:
  stage: fuzzing
  tags: ["runner:apm-k8s-tweaked-metal"]
  image: $BASE_CI_IMAGE
  timeout: 30m
  rules:
    - if: '$CI_COMMIT_REF_NAME == "master" && $CI_PIPELINE_SOURCE == "schedule"'
    - if: '$CI_COMMIT_REF_NAME == "master" && $CI_PIPELINE_SOURCE == "push"'
    - when: manual
      allow_failure: true
    # This makes the job always available as a manual trigger from any branch, not just web pipelines
  script: |
    # TODO: figure out what's the actual path to the source code instead of hardcoding it?
    # Copy source code to /workspace where the build scripts expect it
    mv /go/src/github.com/DataDog/apm-reliability/libddwaf /workspace
    cd /workspace
    echo "Starting fuzzing infrastructure setup..."
    echo "Current commit: $CI_COMMIT_SHA"
    echo "Current branch: $CI_COMMIT_REF_NAME"
    echo "Current working directory: $(pwd)"
    ls -la
    python3 -m pip install requests
    python3 /workspace/ci/scripts/fuzz_infra.py
    echo "âœ… Fuzzing setup completed successfully"
